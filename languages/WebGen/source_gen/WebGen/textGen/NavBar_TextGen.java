package WebGen.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class NavBar_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("const NavBar = () => {");
    tgs.newLine();
    ctx.getBuffer().area().increaseIndent();
    tgs.indent();
    tgs.append("return (");
    tgs.newLine();
    ctx.getBuffer().area().increaseIndent();
    tgs.indent();
    tgs.append("<Grommet.Nav direction =\"");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.direction$BcgP));
    tgs.append("\" ");
    tgs.append("background=\"");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.background$65I1));
    tgs.append("\" ");
    tgs.append("pad=\"");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.pad$66r4));
    tgs.append("\"");
    tgs.append(">");
    tgs.newLine();
    ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.anchors$fZEf)).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {

        ctx.getBuffer().area().increaseIndent();
        tgs.indent();
        tgs.appendNode(it);
        tgs.newLine();
        ctx.getBuffer().area().decreaseIndent();
      }
    });
    tgs.indent();
    tgs.append("</Grommet.Nav>");
    tgs.newLine();
    ctx.getBuffer().area().decreaseIndent();
    tgs.indent();
    tgs.append(");");
    tgs.newLine();
    ctx.getBuffer().area().decreaseIndent();
    tgs.append("}");
    tgs.newLine();
  }

  private static final class PROPS {
    /*package*/ static final SProperty direction$BcgP = MetaAdapterFactory.getProperty(0x524c482858c411cL, 0x9a4ee783c820e868L, 0x733cadfcf05b23b8L, 0x733cadfcf05b23b9L, "direction");
    /*package*/ static final SProperty background$65I1 = MetaAdapterFactory.getProperty(0x524c482858c411cL, 0x9a4ee783c820e868L, 0x733cadfcf05b23b8L, 0x4726585730962faaL, "background");
    /*package*/ static final SProperty pad$66r4 = MetaAdapterFactory.getProperty(0x524c482858c411cL, 0x9a4ee783c820e868L, 0x733cadfcf05b23b8L, 0x4726585730962fadL, "pad");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink anchors$fZEf = MetaAdapterFactory.getContainmentLink(0x524c482858c411cL, 0x9a4ee783c820e868L, 0x733cadfcf05b23b8L, 0x472658573096309fL, "anchors");
  }
}
