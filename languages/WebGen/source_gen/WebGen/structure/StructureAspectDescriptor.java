package WebGen.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptApp = createDescriptorForApp();
  /*package*/ final ConceptDescriptor myConceptComponent = createDescriptorForComponent();
  /*package*/ final ConceptDescriptor myConceptNavBar = createDescriptorForNavBar();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptApp, myConceptComponent, myConceptNavBar);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.App:
        return myConceptApp;
      case LanguageConceptSwitch.Component:
        return myConceptComponent;
      case LanguageConceptSwitch.NavBar:
        return myConceptNavBar;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForApp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WebGen", "App", 0x524c482858c411cL, 0x9a4ee783c820e868L, 0x733cadfcf05c6e05L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b4f30641-7f1b-428b-b3d8-bf4ba03b50c5(WebGen.structure)/8303703114840305157");
    b.version(2);
    b.aggregate("header", 0x733cadfcf05cbcaaL).target(0x524c482858c411cL, 0x9a4ee783c820e868L, 0x733cadfcf05c6e24L).optional(true).ordered(true).multiple(false).origin("8303703114840325290").done();
    b.alias("app");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComponent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WebGen", "Component", 0x524c482858c411cL, 0x9a4ee783c820e868L, 0x733cadfcf05c6e24L);
    b.class_(false, true, false);
    b.origin("r:b4f30641-7f1b-428b-b3d8-bf4ba03b50c5(WebGen.structure)/8303703114840305188");
    b.version(2);
    b.alias("component");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNavBar() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WebGen", "NavBar", 0x524c482858c411cL, 0x9a4ee783c820e868L, 0x733cadfcf05b23b8L);
    b.class_(false, false, false);
    b.super_("WebGen.structure.Component", 0x524c482858c411cL, 0x9a4ee783c820e868L, 0x733cadfcf05c6e24L);
    b.origin("r:b4f30641-7f1b-428b-b3d8-bf4ba03b50c5(WebGen.structure)/8303703114840220600");
    b.version(2);
    b.property("text", 0x733cadfcf05b23b9L).type(PrimitiveTypeId.STRING).origin("8303703114840220601").done();
    b.alias("navbar");
    return b.create();
  }
}
